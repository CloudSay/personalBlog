import{o as a,a as p,b as t,F as e,c as n}from"./app.4ee60a11.js";import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";const c={},l=n('<h2 id="\u5305\u542Bmin\u51FD\u6570\u7684\u6808" tabindex="-1"><a class="header-anchor" href="#\u5305\u542Bmin\u51FD\u6570\u7684\u6808" aria-hidden="true">#</a> \u5305\u542Bmin\u51FD\u6570\u7684\u6808</h2><p>\u5B9A\u4E49\u6808\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u8BF7\u5728\u8BE5\u7C7B\u578B\u4E2D\u5B9E\u73B0\u4E00\u4E2A\u80FD\u591F\u5F97\u5230\u6808\u4E2D\u6240\u542B\u6700\u5C0F\u5143\u7D20\u7684min\u51FD\u6570\uFF08\u65F6\u95F4\u590D\u6742\u5EA6\u5E94\u4E3AO\uFF081\uFF09\uFF09\u3002</p><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><p>1.\u5B9A\u4E49\u4E24\u4E2A\u6808\uFF0C\u4E00\u4E2A\u6808\u7528\u4E8E\u5B58\u50A8\u6570\u636E\uFF0C\u53E6\u4E00\u4E2A\u6808\u7528\u4E8E\u5B58\u50A8\u6BCF\u6B21\u6570\u636E\u8FDB\u6808\u65F6\u6808\u7684\u6700\u5C0F\u503C.</p><p>2.\u6BCF\u6B21\u6570\u636E\u8FDB\u6808\u65F6\uFF0C\u5C06\u6B64\u6570\u636E\u548C\u6700\u5C0F\u503C\u6808\u7684\u6808\u9876\u5143\u7D20\u6BD4\u8F83\uFF0C\u5C06\u4E8C\u8005\u6BD4\u8F83\u7684\u8F83\u5C0F\u503C\u518D\u6B21\u5B58\u5165\u6700\u5C0F\u503C\u6808.</p><p>4.\u6570\u636E\u6808\u51FA\u6808\uFF0C\u6700\u5C0F\u503C\u6808\u4E5F\u51FA\u6808\u3002</p><p>3.\u8FD9\u6837\u6700\u5C0F\u503C\u6808\u7684\u6808\u9876\u6C38\u8FDC\u662F\u5F53\u524D\u6808\u7684\u6700\u5C0F\u503C\u3002</p><p>\u4EE5\u6570\u636E[3,4,2,7,9,0]\u4E3A\u4F8B\uFF0C\u8BA9\u8FD9\u7EC4\u6570\u5B57\u4F9D\u6B21\u5982\u6808\uFF0C\u5219\u6808\u548C\u5176\u5BF9\u5E94\u7684\u6700\u5C0F\u503C\u6808\u5982\u4E0B\uFF1A</p>',8),u=["src"],r=n(`<h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> dataStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> minStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    dataStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>minStack<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span>  node <span class="token operator">&lt;</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        minStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        minStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    minStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> dataStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">var</span> length <span class="token operator">=</span> dataStack<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">return</span> length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>dataStack<span class="token punctuation">[</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">var</span> length <span class="token operator">=</span> minStack<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">return</span> length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>minStack<span class="token punctuation">[</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>`,2);function i(s,k){return a(),p(e,null,[l,t("img",{src:s.$withBase("/mainstack.png"),alt:"foo"},null,8,u),r],64)}var d=o(c,[["render",i]]);export{d as default};
