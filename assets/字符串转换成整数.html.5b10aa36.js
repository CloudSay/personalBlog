import{c as n}from"./app.4ee60a11.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u4E00\u4E2A\u6574\u6570(\u5B9E\u73B0<code>Integer.valueOf(string)</code>\u7684\u529F\u80FD\uFF0C\u4F46\u662F<code>string</code>\u4E0D\u7B26\u5408\u6570\u5B57\u8981\u6C42\u65F6\u8FD4\u56DE0)\uFF0C\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u5B57\u7B26\u4E32\u8F6C\u6362\u6574\u6570\u7684\u5E93\u51FD\u6570\u3002 \u6570\u503C\u4E3A0\u6216\u8005\u5B57\u7B26\u4E32\u4E0D\u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u6570\u503C\u5219\u8FD4\u56DE0\u3002</p><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><p>\u5FAA\u73AF\u5B57\u7B26\u4E32\uFF1A\u5F53\u524D\u503C*10\u76F8\u52A0\uFF0C\u5FAA\u73AF\u65F6\u770B\u6BCF\u4E00\u9879\u662F\u5426\u5408\u6CD5\uFF0C\u6700\u540E\u6839\u636E\u9996\u4F4D\u7B26\u53F7\u5224\u65AD\u6B63\u8D1F</p><p>\u4E3B\u8981\u8003\u8651\u7F16\u5199\u4EE3\u7801\u7684\u4E25\u8C28\u6027\uFF0C\u9700\u8981\u5224\u65AD\u4EE5\u4E0B\u5F02\u5E38\u60C5\u51B5</p><ul><li>1.\u8F93\u5165\u4E3A\u7A7A</li><li>2.\u6709\u65E0\u7B26\u53F7 \u6B63\u8D1F</li></ul><h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">StrToInt</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">==</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> str <span class="token operator">==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> first <span class="token operator">=</span> str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> int <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> first <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        int <span class="token operator">=</span> first<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">!==</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">&amp;&amp;</span> first <span class="token operator">!==</span> <span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          int <span class="token operator">=</span> int <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> first <span class="token operator">===</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">-</span> int <span class="token operator">:</span> int<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>`,8);function t(e,o){return p}var l=s(a,[["render",t]]);export{l as default};
