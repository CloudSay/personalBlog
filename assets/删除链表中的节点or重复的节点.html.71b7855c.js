import{c as n}from"./app.4ee60a11.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="\u5220\u9664\u94FE\u8868\u4E2D\u7684\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u94FE\u8868\u4E2D\u7684\u8282\u70B9" aria-hidden="true">#</a> \u5220\u9664\u94FE\u8868\u4E2D\u7684\u8282\u70B9</h2><p>\u7ED9\u5B9A\u5355\u94FE\u8868\u7684\u5934\u6307\u9488\u548C\u8981\u5220\u9664\u7684\u6307\u9488\u8282\u70B9\uFF0C\u5728O(1)\u65F6\u95F4\u5185\u5220\u9664\u8BE5\u8282\u70B9\u3002</p><ul><li>1.\u5220\u9664\u7684\u8282\u70B9\u4E0D\u662F\u5C3E\u90E8\u8282\u70B9 - \u5C06next\u8282\u70B9\u8986\u76D6\u5F53\u524D\u8282\u70B9</li><li>2.\u5220\u9664\u7684\u8282\u70B9\u662F\u5C3E\u90E8\u8282\u70B9\u4E14\u7B49\u4E8E\u5934\u8282\u70B9\uFF0C\u53EA\u5269\u4E00\u4E2A\u8282\u70B9 - \u5C06\u5934\u8282\u70B9\u7F6E\u4E3Anull</li><li>3.\u5220\u9664\u7684\u8282\u70B9\u662F\u5C3E\u8282\u70B9\u4E14\u524D\u9762\u8FD8\u6709\u8282\u70B9 - \u904D\u5386\u5230\u672B\u5C3E\u7684\u524D\u4E00\u4E2A\u8282\u70B9\u5220\u9664</li></ul><p>\u53EA\u6709\u7B2C\u4E09\u79CD\u60C5\u51B5\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(n)\uFF0C\u4E14\u8FD9\u79CD\u60C5\u51B5\u53EA\u4F1A\u51FA\u73B01/n\u6B21\uFF0C\u6240\u4EE5\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(1)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">var</span> <span class="token function-variable function">deleteNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">head<span class="token punctuation">,</span> node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        node<span class="token punctuation">.</span>val <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
        node<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">===</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        node <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        head <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        node <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          node <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        node<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        node <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="\u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u8282\u70B9" aria-hidden="true">#</a> \u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u8282\u70B9</h2><h3 id="\u65B9\u6CD51-\u5B58\u50A8\u94FE\u8868\u4E2D\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD51-\u5B58\u50A8\u94FE\u8868\u4E2D\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570" aria-hidden="true">#</a> \u65B9\u6CD51.\u5B58\u50A8\u94FE\u8868\u4E2D\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570</h3><ul><li>1.\u7528\u4E00\u4E2Amap\u5B58\u50A8\u6BCF\u4E2A\u8282\u70B9\u51FA\u73B0\u7684\u6B21\u6570</li><li>2.\u5220\u9664\u51FA\u73B0\u6B21\u6570\u5927\u4E8E1\u7684\u8282\u70B9</li></ul><p>\u6B64\u65B9\u6CD5\u5220\u9664\u8282\u70B9\u65F6\u53EF\u4EE5\u4F7F\u7528\u4E0A\u9762\u603B\u7ED3\u7684\u529E\u6CD5\u3002</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n)</p><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(n)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">deleteDuplication</span><span class="token punctuation">(</span><span class="token parameter">pHead</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>pHead <span class="token operator">&amp;&amp;</span> pHead<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> current <span class="token operator">=</span> pHead<span class="token punctuation">;</span>
        <span class="token comment">// \u8BA1\u6570</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> val <span class="token operator">=</span> map<span class="token punctuation">[</span>current<span class="token punctuation">.</span>val<span class="token punctuation">]</span><span class="token punctuation">;</span>
          map<span class="token punctuation">[</span>current<span class="token punctuation">.</span>val<span class="token punctuation">]</span> <span class="token operator">=</span> val <span class="token operator">?</span> val <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
          current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        current <span class="token operator">=</span> pHead<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> val <span class="token operator">=</span> map<span class="token punctuation">[</span>current<span class="token punctuation">.</span>val<span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5220\u9664\u8282\u70B9</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              current<span class="token punctuation">.</span>val <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
              current<span class="token punctuation">.</span>next <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">===</span> pHead<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              current <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
              pHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              current <span class="token operator">=</span> pHead<span class="token punctuation">;</span>
              <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              current<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
              current <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> pHead<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="\u65B9\u6CD52-\u91CD\u65B0\u6BD4\u8F83\u8FDE\u63A5\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD52-\u91CD\u65B0\u6BD4\u8F83\u8FDE\u63A5\u6570\u7EC4" aria-hidden="true">#</a> \u65B9\u6CD52.\u91CD\u65B0\u6BD4\u8F83\u8FDE\u63A5\u6570\u7EC4</h3><p>\u94FE\u8868\u662F\u6392\u597D\u987A\u5E8F\u7684\uFF0C\u6240\u4EE5\u91CD\u590D\u5143\u7D20\u90FD\u4F1A\u76F8\u90BB\u51FA\u73B0 \u9012\u5F52\u94FE\u8868\uFF1A</p><ul><li>1.\u5F53\u524D\u8282\u70B9\u6216\u5F53\u524D\u8282\u70B9\u7684next\u4E3A\u7A7A\uFF0C\u8FD4\u56DE\u8BE5\u8282\u70B9</li><li>2.\u5F53\u524D\u8282\u70B9\u662F\u91CD\u590D\u8282\u70B9\uFF1A\u627E\u5230\u540E\u9762\u7B2C\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u8282\u70B9</li><li>3.\u5F53\u524D\u8282\u70B9\u4E0D\u91CD\u590D\uFF1A\u5C06\u5F53\u524D\u7684\u8282\u70B9\u7684next\u8D4B\u503C\u4E3A\u4E0B\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u8282\u70B9</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">deleteDuplication</span><span class="token punctuation">(</span><span class="token parameter">pHead</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pHead <span class="token operator">||</span> <span class="token operator">!</span>pHead<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> pHead<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pHead<span class="token punctuation">.</span>val <span class="token operator">===</span> pHead<span class="token punctuation">.</span>next<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> tempNode <span class="token operator">=</span> pHead<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>tempNode <span class="token operator">&amp;&amp;</span> pHead<span class="token punctuation">.</span>val <span class="token operator">===</span> tempNode<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          tempNode <span class="token operator">=</span> tempNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">deleteDuplication</span><span class="token punctuation">(</span>tempNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        pHead<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">deleteDuplication</span><span class="token punctuation">(</span>pHead<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> pHead<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n)</p><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(1)</p><h2 id="\u8003\u5BDF\u70B9" tabindex="-1"><a class="header-anchor" href="#\u8003\u5BDF\u70B9" aria-hidden="true">#</a> \u8003\u5BDF\u70B9</h2><ul><li>\u94FE\u8868</li><li>\u8003\u8651\u95EE\u9898\u7684\u5168\u9762\u6027</li></ul>`,20);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
