import{c as n}from"./app.4ee60a11.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="\u9898\u4E8C\u53C9\u6811\u7684\u540E\u7EED\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u9898\u4E8C\u53C9\u6811\u7684\u540E\u7EED\u904D\u5386" aria-hidden="true">#</a> \u9898\u4E8C\u53C9\u6811\u7684\u540E\u7EED\u904D\u5386</h2><p>\u8F93\u5165\u4E00\u4E2A\u6574\u6570\u6570\u7EC4\uFF0C\u5224\u65AD\u8BE5\u6570\u7EC4\u662F\u4E0D\u662F\u67D0\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u7684\u7ED3\u679C\u3002\u5982\u679C\u662F\u5219\u8F93\u51FAYes,\u5426\u5219\u8F93\u51FANo\u3002\u5047\u8BBE\u8F93\u5165\u7684\u6570\u7EC4\u7684\u4EFB\u610F\u4E24\u4E2A\u6570\u5B57\u90FD\u4E92\u4E0D\u76F8\u540C\u3002</p><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><p>1.\u540E\u5E8F\u904D\u5386\uFF1A\u5206\u6210\u4E09\u90E8\u5206\uFF1A\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u4E3A\u6839\u8282\u70B9\uFF0C\u7B2C\u4E8C\u90E8\u5206\u4E3A\u5DE6\u5B50\u6811\u7684\u503C\u6BD4\u6839\u8282\u70B9\u90FD\u5C0F\uFF0C\u7B2C\u4E09\u90E8\u5206\u4E3A\u53F3\u5B50\u6811\u7684\u503C\u6BD4\u6839\u8282\u70B9\u90FD\u5927\u3002</p><p>2.\u5148\u68C0\u6D4B\u5DE6\u5B50\u6811\uFF0C\u5DE6\u4FA7\u6BD4\u6839\u8282\u70B9\u5C0F\u7684\u503C\u90FD\u5224\u5B9A\u4E3A\u5DE6\u5B50\u6811\u3002</p><p>3.\u9664\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u5916\u548C\u5DE6\u5B50\u6811\u5916\u7684\u5176\u4ED6\u503C\u4E3A\u53F3\u5B50\u6811\uFF0C\u53F3\u5B50\u6811\u6709\u4E00\u4E2A\u6BD4\u6839\u8282\u70B9\u5C0F\uFF0C\u5219\u8FD4\u56DEfalse\u3002</p><p>4.\u82E5\u5B58\u5728\uFF0C\u5DE6\u3001\u53F3\u5B50\u6811\uFF0C\u9012\u5F52\u68C0\u6D4B\u5DE6\u3001\u53F3\u5B50\u6811\u662F\u5426\u590D\u5408\u89C4\u8303\u3002</p><h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">VerifySquenceOfBST</span><span class="token punctuation">(</span><span class="token parameter">sequence</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>sequence <span class="token operator">&amp;&amp;</span> sequence<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> root <span class="token operator">=</span> sequence<span class="token punctuation">[</span>sequence<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sequence<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>sequence<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> sequence<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>sequence<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">var</span> left <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          left <span class="token operator">=</span> <span class="token function">VerifySquenceOfBST</span><span class="token punctuation">(</span>sequence<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">var</span> right <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> sequence<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          right <span class="token operator">=</span> <span class="token function">VerifySquenceOfBST</span><span class="token punctuation">(</span>sequence<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> sequence<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> left <span class="token operator">&amp;&amp;</span> right<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="\u8003\u5BDF\u70B9" tabindex="-1"><a class="header-anchor" href="#\u8003\u5BDF\u70B9" aria-hidden="true">#</a> \u8003\u5BDF\u70B9</h2><ul><li>\u4E8C\u53C9\u6811</li></ul>`,11);function e(t,o){return p}var u=s(a,[["render",e]]);export{u as default};
