import{c as n}from"./app.4ee60a11.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="\u9898\u76EE1-\u4E0D\u5206\u884C\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE1-\u4E0D\u5206\u884C\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370" aria-hidden="true">#</a> \u9898\u76EE1-\u4E0D\u5206\u884C\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370</h2><p>\u4ECE\u4E0A\u5F80\u4E0B\u6253\u5370\u51FA\u4E8C\u53C9\u6811\u7684\u6BCF\u4E2A\u8282\u70B9\uFF0C\u540C\u5C42\u8282\u70B9\u4ECE\u5DE6\u81F3\u53F3\u6253\u5370\u3002</p><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><ul><li>\u5728\u6253\u5370\u7B2C\u4E00\u884C\u65F6\uFF0C\u5C06\u5DE6\u5B69\u5B50\u8282\u70B9\u548C\u53F3\u5B69\u5B50\u8282\u70B9\u5B58\u5165\u4E00\u4E2A\u961F\u5217\u91CC</li><li>\u961F\u5217\u5143\u7D20\u51FA\u961F\u5217\u6253\u5370\uFF0C\u540C\u65F6\u5206\u522B\u5C06\u5DE6\u5B69\u5B50\u8282\u70B9\u548C\u53F3\u5B69\u5B50\u8282\u70B9\u5B58\u5165\u961F\u5217</li><li>\u8FD9\u6837\u6253\u5370\u4E8C\u53C9\u6811\u7684\u987A\u5E8F\u5C31\u662F\u6CA1\u884C\u4ECE\u5DE6\u5230\u53F3\u6253\u5370</li></ul><h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">PrintFromTopToBottom</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> current <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="\u9898\u76EE2-\u628A\u4E8C\u53C9\u6811\u6253\u5370\u6210\u591A\u884C" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE2-\u628A\u4E8C\u53C9\u6811\u6253\u5370\u6210\u591A\u884C" aria-hidden="true">#</a> \u9898\u76EE2-\u628A\u4E8C\u53C9\u6811\u6253\u5370\u6210\u591A\u884C</h2><p>\u4ECE\u4E0A\u5230\u4E0B\u6309\u5C42\u6253\u5370\u4E8C\u53C9\u6811\uFF0C\u540C\u4E00\u5C42\u7ED3\u70B9\u4ECE\u5DE6\u81F3\u53F3\u8F93\u51FA\u3002\u6BCF\u4E00\u5C42\u8F93\u51FA\u4E00\u884C\u3002</p><h2 id="\u601D\u8DEF-1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF-1" aria-hidden="true">#</a> \u601D\u8DEF</h2><ul><li>\u4F7F\u7528\u4E00\u4E2A\u961F\u5217\u5B58\u50A8\u5F53\u524D\u5C42\u904D\u5386\u7684\u8282\u70B9</li><li>\u4F7F\u7528\u4E24\u4E2A\u53D8\u91CF\u6765\u6807\u8BB0\u5F53\u524D\u904D\u5386\u7684\u72B6\u6001</li><li>currentNums\uFF1A\u5F53\u524D\u5C42\u5269\u4F59\u7684\u8282\u70B9\u6570</li><li>childNums\uFF1A\u5B69\u5B50\u8282\u70B9\u6570</li><li>\u5F53\u524D\u5C42\u904D\u5386\u5B8C\u6210\u540E\u5F00\u59CB\u904D\u5386\u5B69\u5B50\u8282\u70B9\uFF0CcurrentNums\u8D4B\u503C\u4E3AchildNums\uFF0CchildNums\u8D4B\u503C\u4E3A0\uFF0C</li></ul><h2 id="\u4EE3\u7801-1" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801-1" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">Print</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> tempArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> currentNums <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> childNums <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> current <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
            childNums<span class="token operator">++</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
            childNums<span class="token operator">++</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          tempArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
          currentNums<span class="token operator">--</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>currentNums <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            currentNums <span class="token operator">=</span> childNums<span class="token punctuation">;</span>
            childNums <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tempArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
            tempArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="\u9898\u76EE3-\u6309\u4E4B\u5B57\u5F62\u987A\u5E8F\u6253\u5370\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE3-\u6309\u4E4B\u5B57\u5F62\u987A\u5E8F\u6253\u5370\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u9898\u76EE3-\u6309\u4E4B\u5B57\u5F62\u987A\u5E8F\u6253\u5370\u4E8C\u53C9\u6811</h2><p>\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u6309\u7167\u4E4B\u5B57\u5F62\u6253\u5370\u4E8C\u53C9\u6811\uFF0C\u5373\u7B2C\u4E00\u884C\u6309\u7167\u4ECE\u5DE6\u5230\u53F3\u7684\u987A\u5E8F\u6253\u5370\uFF0C\u7B2C\u4E8C\u5C42\u6309\u7167\u4ECE\u53F3\u81F3\u5DE6\u7684\u987A\u5E8F\u6253\u5370\uFF0C\u7B2C\u4E09\u884C\u6309\u7167\u4ECE\u5DE6\u5230\u53F3\u7684\u987A\u5E8F\u6253\u5370\uFF0C\u5176\u4ED6\u884C\u4EE5\u6B64\u7C7B\u63A8\u3002</p><h2 id="\u601D\u8DEF-2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF-2" aria-hidden="true">#</a> \u601D\u8DEF</h2><p>\u5947\u6570\u4ECE\u5DE6\u5230\u53F3\uFF0C\u5076\u6570\u4ECE\u53F3\u5230\u5DE6</p><ul><li>\u82E5\u5F53\u524D\u5C42\u4E3A\u5947\u6570\u5C42\uFF0C\u4ECE\u5DE6\u5230\u53F3\u6253\u5370\uFF0C\u540C\u65F6\u586B\u5145\u4E0B\u4E00\u5C42\uFF0C\u4ECE\u53F3\u5230\u5DE6\u6253\u5370\uFF08\u5148\u586B\u5145\u5DE6\u5B69\u5B50\u8282\u70B9\u518D\u586B\u5145\u53F3\u5B69\u5B50\u8282\u70B9\uFF09\u3002</li><li>\u82E5\u5F53\u524D\u5C42\u4E3A\u5076\u6570\u5C42\uFF0C\u4ECE\u53F3\u5230\u5DE6\u6253\u5370\uFF0C\u540C\u65F6\u586B\u5145\u4E0B\u4E00\u5C42\uFF0C\u4ECE\u5DE6\u5230\u53F3\u6253\u5370\uFF08\u5148\u586B\u5145\u53F3\u5B69\u5B50\u8282\u70B9\u518D\u586B\u5145\u5DE6\u5B69\u5B50\u8282\u70B9\uFF09\u3002</li><li>\u4E0D\u96BE\u53D1\u73B0\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u6808\u6765\u4F5C\u4E3A\u5B58\u50A8\u7ED3\u6784\u3002</li><li>\u5206\u522B\u8BBE\u5B9A\u4E00\u4E2A\u5947\u6570\u6808\u548C\u4E00\u4E2A\u5076\u6570\u6808\uFF0C \u4ECE\u5C06\u4E8C\u53C9\u6811\u5934\u90E8\u5143\u7D20\u5B58\u5165\u5947\u6570\u6808\u5F00\u59CB\u3002</li></ul><blockquote><p>\u8FD9\u91CC\u540C\u6837\u53EF\u4F7F\u7528\u4E0A\u97622\u9898\u7684\u4E24\u4E2A\u53D8\u91CF\u6765\u8BB0\u5F55\u5C42\u6570\uFF0C\u53EA\u9700\u8981\u4E00\u4E2A\u6808\u5373\u53EF\uFF0C\u4F46\u662F\u4EE3\u7801\u4E0D\u5982\u4E24\u4E2A\u6808\u5BB9\u6613\u7406\u89E3\u3002</p></blockquote><h2 id="\u4EE3\u7801-2" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801-2" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">Print</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> oddStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> evenStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        oddStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>oddStack<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> evenStack<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token keyword">while</span> <span class="token punctuation">(</span>oddStack<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> current <span class="token operator">=</span> oddStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            temp<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              evenStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              evenStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>temp<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          <span class="token keyword">while</span> <span class="token punctuation">(</span>evenStack<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> current <span class="token operator">=</span> evenStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            temp<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              oddStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              oddStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>temp<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h2 id="\u8003\u5BDF\u70B9" tabindex="-1"><a class="header-anchor" href="#\u8003\u5BDF\u70B9" aria-hidden="true">#</a> \u8003\u5BDF\u70B9</h2><ul><li>\u4E8C\u53C9\u6811</li><li>\u6808</li><li>\u961F\u5217</li></ul>`,22);function t(e,c){return p}var l=s(a,[["render",t]]);export{l as default};
