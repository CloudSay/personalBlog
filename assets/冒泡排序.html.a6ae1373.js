import{c as n}from"./app.4ee60a11.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const s={},p=n(`<h2 id="\u601D\u60F3" tabindex="-1"><a class="header-anchor" href="#\u601D\u60F3" aria-hidden="true">#</a> \u601D\u60F3</h2><p>\u5FAA\u73AF\u6570\u7EC4\uFF0C\u6BD4\u8F83\u5F53\u524D\u5143\u7D20\u548C\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u5F53\u524D\u5143\u7D20\u6BD4\u4E0B\u4E00\u4E2A\u5143\u7D20\u5927\uFF0C\u5411\u4E0A\u5192\u6CE1\u3002</p><p>\u8FD9\u6837\u4E00\u6B21\u5FAA\u73AF\u4E4B\u540E\u6700\u540E\u4E00\u4E2A\u6570\u5C31\u662F\u672C\u6570\u7EC4\u6700\u5927\u7684\u6570\u3002</p><p>\u4E0B\u4E00\u6B21\u5FAA\u73AF\u7EE7\u7EED\u4E0A\u9762\u7684\u64CD\u4F5C\uFF0C\u4E0D\u5FAA\u73AF\u5DF2\u7ECF\u6392\u5E8F\u597D\u7684\u6570\u3002</p><p>\u4F18\u5316\uFF1A\u5F53\u4E00\u6B21\u5FAA\u73AF\u6CA1\u6709\u53D1\u751F\u5192\u6CE1\uFF0C\u8BF4\u660E\u5DF2\u7ECF\u6392\u5E8F\u5B8C\u6210\uFF0C\u505C\u6B62\u5FAA\u73AF\u3002</p><h2 id="\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5" aria-hidden="true">#</a> \u89E3\u6CD5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> complete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u6BD4\u8F83\u76F8\u90BB\u6570</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">[</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>array<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            complete <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6CA1\u6709\u5192\u6CE1\u7ED3\u675F\u5FAA\u73AF</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>complete<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u590D\u6742\u5EA6</h2><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A<code>O(n2)</code></p><p>\u7A7A\u95F4\u590D\u6742\u5EA6:<code>O(1)</code></p><h2 id="\u7A33\u5B9A\u6027" tabindex="-1"><a class="header-anchor" href="#\u7A33\u5B9A\u6027" aria-hidden="true">#</a> \u7A33\u5B9A\u6027</h2><p>\u7A33\u5B9A</p>`,12);function t(e,o){return p}var l=a(s,[["render",t]]);export{l as default};
